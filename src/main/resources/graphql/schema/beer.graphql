type Query {
    beers: [Beer!]
    beer(id: ID!): Beer
    breweries: [Brewery!]
    brewery(id: ID!): Brewery
    reviews: [Review!]
    review(id: ID!): Review
    users: [User!]
    user(id: ID!): User
}

type Mutation {
    addBeer(input: BeerInput!): Beer
    addReview(input: ReviewInput!): Review
    addUser(input: UserInput!): User
}

type Beer {
    id: ID!
    name: String!
    style: String!
    brewery: Brewery!
    reviews: [Review!]
}

type Brewery {
    id: ID!
    name: String!
    country: String!
    beers: [Beer!]
}

type Review {
    id: ID!
    text: String!
    rating: Int!
    beer: Beer!
    user: User!
}

type User {
    id: ID!
    name: String!
    email: String!
    reviews: [Review!]
}

input BeerInput {
    name: String!
    style: String!
    breweryId: ID!
}

input ReviewInput {
    text: String!
    rating: Int!
    beerId: ID!
    userId: ID!
}

input UserInput {
    name: String!
    email: String!
}